(function () {
    if (typeof web3 !== 'undefined') {
        web3 = new Web3(web3.currentProvider);
    } else {
        // set the provider you want from Web3.providers
        web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
    }
    web3.eth.getAccounts(function (err, accounts) {
        if (err !== null) console.error("An error occurred: " + err);
        else if (accounts.length === 0) {
            console.log("User is not logged in to MetaMask");
            document.getElementById('not_login_metamask').style.display = "block";
            document.getElementById('login_metamask').style.display = "none";

        }
        else {
            console.log("User is logged in to MetaMask");
            document.getElementById('login_metamask').style.display = "block";
            document.getElementById('not_login_metamask').style.display = "none";
        }
    });

    CheckFieldInput();
    

    $('#AddMoreOption').click(function () {
        var OptionAdd = parseInt($("#countOption").val()) + 1;
        $("#countOption").val(OptionAdd);
        $(".d-form ").append("<div class=\"d-formField d-withIcon d-withLabel d-isMultiline\"><div class=\"d-fieldContainer\"><div class=\"d-iconContainer\"></div><div class=\"d-inputContainer\"><input type=\"text\"  id=\"d-pollOption" + OptionAdd + "\" onchange=\"CheckFieldInput();\" placeholder=\"Add Option " + OptionAdd +"\" required=\"required\" maxlength=\"64\"></div></div></div>");
    });
    $('#build_SC').click(function () {
        if (typeof web3 !== 'undefined') {
            web3 = new Web3(web3.currentProvider);
        } else {
            // set the provider you want from Web3.providers
            web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
        }
        var contractAt = '0xf849ccfea6772cfa2bbf510acee1f164e9b76743';
        var titleCont_byte32 = web3.fromUtf8(($("#d-pollTitle").val())); 
        //var _descCont = $("#d-pollDescription").val();
        var countOption = parseInt($("#countOption").val());
        var candidateNames = [];
        for (var i = 0; i < countOption; i++) {
            candidateNames[i] = web3.fromUtf8(($("#d-pollOption" + (i + 1)).val()));
        }

       
        var votingContract = web3.eth.contract([{ "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "proposals", "outputs": [{ "name": "candidateName", "type": "bytes32" }, { "name": "voteCount", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "address_created", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "candidate", "type": "bytes32" }], "name": "totalVotesFor", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "CheckVoter", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "candidateID", "type": "uint256" }], "name": "CheckCandidate", "outputs": [{ "name": "", "type": "uint256" }, { "name": "", "type": "bytes32" }, { "name": "", "type": "uint256" }, { "name": "", "type": "address[]" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "candidate", "type": "bytes32" }], "name": "validCandidate", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "bytes32" }], "name": "votesReceived", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "voters", "outputs": [{ "name": "voted", "type": "bool" }, { "name": "delegate", "type": "address" }, { "name": "vote", "type": "bytes32" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "candidate", "type": "bytes32" }], "name": "voteForCandidate", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "CountCandidate", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [{ "name": "candidateNames", "type": "bytes32[]" }, { "name": "contractAt", "type": "address" }, { "name": "titleCont_byte32", "type": "bytes32" }], "payable": true, "stateMutability": "payable", "type": "constructor" }]);
        var voting = votingContract.new(
            candidateNames,
            contractAt,
            titleCont_byte32,
            {
                from: web3.eth.accounts[0],
                data: '0x608060405260405162001082380380620010828339810180604052620000299190810190620003e9565b606060008090505b8451811015620000eb57600260606040519081016040528087848151811015156200005857fe5b9060200190602002015160001916815260200160008152602001848152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190600019169055602082015181600101556040820151816002019080519060200190620000d992919062000259565b50505050808060010191505062000031565b30600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff1660405180807f416464436f6e747261637428616464726573732c627974657333322900000000815250601c01905060405180910390207c01000000000000000000000000000000000000000000000000000000009004600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260001916600019168152602001925050506000604051808303816000875af19250505015156200024e57600080fd5b5050505050620004d9565b828054828255906000526020600020908101928215620002d5579160200282015b82811115620002d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200027a565b5b509050620002e49190620002e8565b5090565b6200032b91905b808211156200032757600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620002ef565b5090565b90565b60006200033c8251620004af565b905092915050565b600082601f83011215156200035857600080fd5b81516200036f620003698262000486565b62000458565b915081818352602084019350602081019050838560208402820111156200039557600080fd5b60005b83811015620003c95781620003ae8882620003d3565b84526020840193506020830192505060018101905062000398565b5050505092915050565b6000620003e18251620004cf565b905092915050565b600080600060608486031215620003ff57600080fd5b600084015167ffffffffffffffff8111156200041a57600080fd5b620004288682870162000344565b93505060206200043b868287016200032e565b92505060406200044e86828701620003d3565b9150509250925092565b6000604051905081810181811067ffffffffffffffff821117156200047c57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200049e57600080fd5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610b9980620004e96000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063013cf08b146100a957806303b628b7146100e75780632f265cf71461011257806331a84c471461014f57806336be62081461017a578063392e6678146101ba5780637021939f146101f7578063a3ec138d14610234578063cc9ab26714610273578063d4ea534f1461029c575b600080fd5b3480156100b557600080fd5b506100d060048036036100cb91908101906108b2565b6102c7565b6040516100de929190610a16565b60405180910390f35b3480156100f357600080fd5b506100fc6102fa565b60405161010991906109a9565b60405180910390f35b34801561011e57600080fd5b5061013960048036036101349190810190610889565b610320565b6040516101469190610a5f565b60405180910390f35b34801561015b57600080fd5b50610164610358565b60405161017191906109c4565b60405180910390f35b34801561018657600080fd5b506101a1600480360361019c91908101906108b2565b6103f7565b6040516101b19493929190610a7a565b60405180910390f35b3480156101c657600080fd5b506101e160048036036101dc9190810190610889565b6104f8565b6040516101ee91906109c4565b60405180910390f35b34801561020357600080fd5b5061021e60048036036102199190810190610889565b61055e565b60405161022b9190610a5f565b60405180910390f35b34801561024057600080fd5b5061025b60048036036102569190810190610860565b610576565b60405161026a939291906109df565b60405180910390f35b34801561027f57600080fd5b5061029a60048036036102959190810190610889565b6105cd565b005b3480156102a857600080fd5b506102b1610817565b6040516102be9190610a5f565b60405180910390f35b6002818154811015156102d657fe5b90600052602060002090600302016000915090508060000154908060010154905082565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061032b826104f8565b151561033657600080fd5b6000808360001916600019168152602001908152602001600020549050919050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff1615156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610a3f565b60405180910390fd5b600191505090565b600080600060608460028681548110151561040e57fe5b90600052602060002090600302016000015460028781548110151561042f57fe5b90600052602060002090600302016001015460028881548110151561045057fe5b9060005260206000209060030201600201808054806020026020016040519081016040528092919081815260200182805480156104e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610498575b5050505050905093509350935093509193509193565b600080600090505b60028054905081101561055357826000191660028281548110151561052157fe5b9060005260206000209060030201600001546000191614156105465760019150610558565b8080600101915050610500565b600091505b50919050565b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905083565b6000806105d9836104f8565b15156105e457600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160000160009054906101000a900460ff16151515610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090610a3f565b60405180910390fd5b60018260000160006101000a81548160ff02191690831515021790555082826001018160001916905550338260000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600080856000191660001916815260200190815260200160002060008282540192505081905550600090505b60028054905081101561081257826000191660028281548110151561073557fe5b90600052602060002090600302016000015460001916141561080557600160028281548110151561076257fe5b90600052602060002090600302016001016000828254019250508190555060028181548110151561078f57fe5b90600052602060002090600302016002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b8080600101915050610714565b505050565b6000600280549050905090565b60006108308235610b2b565b905092915050565b60006108448235610b4b565b905092915050565b60006108588235610b55565b905092915050565b60006020828403121561087257600080fd5b600061088084828501610824565b91505092915050565b60006020828403121561089b57600080fd5b60006108a984828501610838565b91505092915050565b6000602082840312156108c457600080fd5b60006108d28482850161084c565b91505092915050565b6108e481610aeb565b82525050565b60006108f582610ad3565b80845260208401935061090783610ac6565b60005b828110156109395761091d8683516108db565b61092682610ade565b915060208601955060018101905061090a565b50849250505092915050565b61094e81610b0b565b82525050565b61095d81610b17565b82525050565b6000600e82527f416c726561647920766f7465642e0000000000000000000000000000000000006020830152604082019050919050565b6109a381610b21565b82525050565b60006020820190506109be60008301846108db565b92915050565b60006020820190506109d96000830184610945565b92915050565b60006060820190506109f46000830186610945565b610a0160208301856108db565b610a0e6040830184610954565b949350505050565b6000604082019050610a2b6000830185610954565b610a38602083018461099a565b9392505050565b60006020820190508181036000830152610a5881610963565b9050919050565b6000602082019050610a74600083018461099a565b92915050565b6000608082019050610a8f600083018761099a565b610a9c6020830186610954565b610aa9604083018561099a565b8181036060830152610abb81846108ea565b905095945050505050565b6000602082019050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60008190509190505600a265627a7a7230582094ff8958b1e421d7a8a99787bd186e79b8da6c57ef81911c7613a471164b1c956c6578706572696d656e74616cf50037',
                gas: '2025240'
            }, function (e, contract) {
                console.log(e, contract);
                
                waitForReceipt(contract.transactionHash, function (receipt) {
                    if (typeof web3 === 'undefined') {
                        console.log('Undefined value!');
                        return false;
                    }
                    if (receipt.status === "0x0") {
                        $("input").removeAttr('disabled');
                        $("#build_SC").removeAttr('disabled');
                        $(".loader").css({ display: "none" });
                        alert("Contract creation failed.");
                    } else {
                        window.location.href = "Default";
                    }

                });
            });
     
    });
    function waitForReceipt(hash, cb) {
        web3.eth.getTransactionReceipt(hash, function (err, receipt) {
            if (err) {
                console.log(err);
            }

            if (receipt !== null) {
                // Transaction went through
                if (cb) {
                    cb(receipt);
                }
            } else {
                // Try again in 1 second
                $("input").attr('disabled', 'disabled');
                $("#build_SC").attr("disabled", "disabled");
                $(".loader").css({ display: "block" });
                window.setTimeout(function () {
                    waitForReceipt(hash, cb);
                }, 1000);
            }
        });
    };
    
})();
function CheckFieldInput() {
    var checkfield = true;
    if ($.trim($('#d-pollTitle').val()) === '') { checkfield = false; }

    var countOption = parseInt($("#countOption").val());
    for (var i = 1; i <= countOption; i++) {
        if ($.trim($("#d-pollOption" + i).val()) === '') {
            checkfield = false; 
        }
    }

    if (checkfield === true) {
        $("#build_SC").removeAttr("disabled");
    } else {
        $("#build_SC").attr("disabled", "disabled");
    }
}